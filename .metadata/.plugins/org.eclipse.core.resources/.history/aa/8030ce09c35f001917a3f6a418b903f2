/*
 * generated by Xtext 2.15.0
 */
package org.xtext.t2.lisp.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.xtext.t2.lisp.lisp.Model

@ExtendWith(InjectionExtension)
@InjectWith(LispInjectorProvider)
class LispParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			2
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	@Test
	def void loadModel1() {
		val result = parseHelper.parse('''
			2.5
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	@Test
	def void loadModel2() {
		val result = parseHelper.parse('''
			(+ 2.5)
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
		@Test
	def void loadModel3() {
		val result = parseHelper.parse('''
			(+ 2.5 2)
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	// Exemplo Link:https://www.cs.unm.edu/~luger/ai-final2/LISP/CH%2011_S-expressions,%20The%20Syntax%20of%20Lisp.pdf pág 152.
			@Test
	def void loadModel4() {
		val result = parseHelper.parse('''
			(+ 1 2 3 4)
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	@Test
	def void loadModel5() {
		val result = parseHelper.parse('''
			()		
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	//Exemplo Link: https://lisp-lang.org/learn/lists
	@Test
	def void loadModel6() {
		val result = parseHelper.parse('''
			(list 1 2 3)
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
		@Test
	def void loadModel7() {
		val result = parseHelper.parse('''
			begin 00
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	@Test
	def void loadModel8() {
		val result = parseHelper.parse('''
			define (list 1 2 23 3)
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	// Exemplo Link: http://www.n-a-n-o.com/lisp/cmucl-tutorials/LISP-tutorial-17.html
	@Test
	def void loadModel9() {
		val result = parseHelper.parse('''
			(+ 4 5 6)
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	//Exemplo Link: https://www.macs.hw.ac.uk/~hwloidl/Courses/12.4PL1/l10.lsp 
	@Test
	def void loadModel10() {
		val result = parseHelper.parse('''
			(sq 3)
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	
}


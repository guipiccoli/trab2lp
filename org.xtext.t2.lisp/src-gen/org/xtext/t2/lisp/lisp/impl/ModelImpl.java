/**
 * generated by Xtext 2.15.0
 */
package org.xtext.t2.lisp.lisp.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.t2.lisp.lisp.Begin;
import org.xtext.t2.lisp.lisp.Decimal;
import org.xtext.t2.lisp.lisp.Define;
import org.xtext.t2.lisp.lisp.Inteiros;
import org.xtext.t2.lisp.lisp.LispPackage;
import org.xtext.t2.lisp.lisp.Model;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.t2.lisp.lisp.impl.ModelImpl#getDecimal <em>Decimal</em>}</li>
 *   <li>{@link org.xtext.t2.lisp.lisp.impl.ModelImpl#getInteiros <em>Inteiros</em>}</li>
 *   <li>{@link org.xtext.t2.lisp.lisp.impl.ModelImpl#getBegin <em>Begin</em>}</li>
 *   <li>{@link org.xtext.t2.lisp.lisp.impl.ModelImpl#getDefine <em>Define</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getDecimal() <em>Decimal</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDecimal()
   * @generated
   * @ordered
   */
  protected EList<Decimal> decimal;

  /**
   * The cached value of the '{@link #getInteiros() <em>Inteiros</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInteiros()
   * @generated
   * @ordered
   */
  protected EList<Inteiros> inteiros;

  /**
   * The cached value of the '{@link #getBegin() <em>Begin</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBegin()
   * @generated
   * @ordered
   */
  protected Begin begin;

  /**
   * The cached value of the '{@link #getDefine() <em>Define</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefine()
   * @generated
   * @ordered
   */
  protected Define define;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LispPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Decimal> getDecimal()
  {
    if (decimal == null)
    {
      decimal = new EObjectContainmentEList<Decimal>(Decimal.class, this, LispPackage.MODEL__DECIMAL);
    }
    return decimal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Inteiros> getInteiros()
  {
    if (inteiros == null)
    {
      inteiros = new EObjectContainmentEList<Inteiros>(Inteiros.class, this, LispPackage.MODEL__INTEIROS);
    }
    return inteiros;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Begin getBegin()
  {
    return begin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBegin(Begin newBegin, NotificationChain msgs)
  {
    Begin oldBegin = begin;
    begin = newBegin;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LispPackage.MODEL__BEGIN, oldBegin, newBegin);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBegin(Begin newBegin)
  {
    if (newBegin != begin)
    {
      NotificationChain msgs = null;
      if (begin != null)
        msgs = ((InternalEObject)begin).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LispPackage.MODEL__BEGIN, null, msgs);
      if (newBegin != null)
        msgs = ((InternalEObject)newBegin).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LispPackage.MODEL__BEGIN, null, msgs);
      msgs = basicSetBegin(newBegin, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LispPackage.MODEL__BEGIN, newBegin, newBegin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Define getDefine()
  {
    return define;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDefine(Define newDefine, NotificationChain msgs)
  {
    Define oldDefine = define;
    define = newDefine;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LispPackage.MODEL__DEFINE, oldDefine, newDefine);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDefine(Define newDefine)
  {
    if (newDefine != define)
    {
      NotificationChain msgs = null;
      if (define != null)
        msgs = ((InternalEObject)define).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LispPackage.MODEL__DEFINE, null, msgs);
      if (newDefine != null)
        msgs = ((InternalEObject)newDefine).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LispPackage.MODEL__DEFINE, null, msgs);
      msgs = basicSetDefine(newDefine, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LispPackage.MODEL__DEFINE, newDefine, newDefine));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LispPackage.MODEL__DECIMAL:
        return ((InternalEList<?>)getDecimal()).basicRemove(otherEnd, msgs);
      case LispPackage.MODEL__INTEIROS:
        return ((InternalEList<?>)getInteiros()).basicRemove(otherEnd, msgs);
      case LispPackage.MODEL__BEGIN:
        return basicSetBegin(null, msgs);
      case LispPackage.MODEL__DEFINE:
        return basicSetDefine(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LispPackage.MODEL__DECIMAL:
        return getDecimal();
      case LispPackage.MODEL__INTEIROS:
        return getInteiros();
      case LispPackage.MODEL__BEGIN:
        return getBegin();
      case LispPackage.MODEL__DEFINE:
        return getDefine();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LispPackage.MODEL__DECIMAL:
        getDecimal().clear();
        getDecimal().addAll((Collection<? extends Decimal>)newValue);
        return;
      case LispPackage.MODEL__INTEIROS:
        getInteiros().clear();
        getInteiros().addAll((Collection<? extends Inteiros>)newValue);
        return;
      case LispPackage.MODEL__BEGIN:
        setBegin((Begin)newValue);
        return;
      case LispPackage.MODEL__DEFINE:
        setDefine((Define)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LispPackage.MODEL__DECIMAL:
        getDecimal().clear();
        return;
      case LispPackage.MODEL__INTEIROS:
        getInteiros().clear();
        return;
      case LispPackage.MODEL__BEGIN:
        setBegin((Begin)null);
        return;
      case LispPackage.MODEL__DEFINE:
        setDefine((Define)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LispPackage.MODEL__DECIMAL:
        return decimal != null && !decimal.isEmpty();
      case LispPackage.MODEL__INTEIROS:
        return inteiros != null && !inteiros.isEmpty();
      case LispPackage.MODEL__BEGIN:
        return begin != null;
      case LispPackage.MODEL__DEFINE:
        return define != null;
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl

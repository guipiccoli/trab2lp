/**
 * generated by Xtext 2.15.0
 */
package org.xtext.t2.lisp.lisp;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Expression</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.t2.lisp.lisp.Expression#getOperacoes <em>Operacoes</em>}</li>
 *   <li>{@link org.xtext.t2.lisp.lisp.Expression#getPrimeiro <em>Primeiro</em>}</li>
 * </ul>
 *
 * @see org.xtext.t2.lisp.lisp.LispPackage#getExpression()
 * @model
 * @generated
 */
public interface Expression extends Definition
{
  /**
   * Returns the value of the '<em><b>Operacoes</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Operacoes</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Operacoes</em>' containment reference.
   * @see #setOperacoes(Operacoes)
   * @see org.xtext.t2.lisp.lisp.LispPackage#getExpression_Operacoes()
   * @model containment="true"
   * @generated
   */
  Operacoes getOperacoes();

  /**
   * Sets the value of the '{@link org.xtext.t2.lisp.lisp.Expression#getOperacoes <em>Operacoes</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Operacoes</em>' containment reference.
   * @see #getOperacoes()
   * @generated
   */
  void setOperacoes(Operacoes value);

  /**
   * Returns the value of the '<em><b>Primeiro</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.t2.lisp.lisp.Recursion}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Primeiro</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Primeiro</em>' containment reference list.
   * @see org.xtext.t2.lisp.lisp.LispPackage#getExpression_Primeiro()
   * @model containment="true"
   * @generated
   */
  EList<Recursion> getPrimeiro();

} // Expression
